# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    io.github.jhipster: DEBUG
    org.nh.artha: DEBUG

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false

management:
  health:
    elasticsearch:
      enabled: false

spring:
  servlet:
    multipart:
      max-file-size: 1GB # Max file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.
      max-request-size: 300MB
  profiles:
    active: dev
    include:
      - swagger
      # Uncomment to activate TLS for the dev profile
      #- tls
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: 172.23.25.5
          zk-nodes: 172.23.25.5
      bindings:
        output:
          destination: topic-jhipster
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://172.23.25.5:5432/artha_db_dev
    username: postgres
    password: nhdev
    hikari:
      poolName: Hikari
      auto-commit: false
      maximumPoolSize: 2
  jpa:
    database-platform: io.github.jhipster.domain.util.FixedPostgreSQL10Dialect
    show-sql: false
    properties:
      hibernate.id.new_generator_mappings: false
      hibernate.connection.provider_disables_autocommit: false
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
      hibernate.cache.hazelcast.instance_name: artha
      hibernate.cache.use_minimal_puts: true
      hibernate.cache.hazelcast.use_lite_member: true
  data:
    elasticsearch:
      cluster-nodes: 172.23.25.5:9300
    jest:
      uri: http://172.23.25.5:10200
  elasticsearch:
    rest:
      uris: http://172.23.25.5:10200
    properties:
      path:
        home: target/elasticsearch
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  mail:
    host: localhost
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

server:
  port: 8097

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 100 # Number of objects in each cache entry
    # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
    #cors:
    # allowed-origins: '*'
    # allowed-methods: '*'
    # allowed-headers: '*'
    # exposed-headers: 'Authorization,Link,X-Total-Count'
    # allow-credentials: true
    # max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: ZjU2MjEzZTc2MDYxNGI5YjMyZDJiZWQ4NmVjYmQ5M2Q0ZjBlMTMxYWJjNmFkZDYzZDI4MDQ5YmVkMDVlMmZmZDUxZGVkNDk5NjcxY2Y1ODFhZTZjM2ZiY2FhMjI3YjIxNTRlYzJkMjVkNTBjYTg0YjNiNDFhYWVhMmNjMGVhMDM=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:8080
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  audit-events:
    retention-period: 30 # Number of days before audit events are deleted.

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================
spark:
  app:
    name: staging csv to json
  master: local[2]

mdm:
  datasource:
    jdbcUrl: jdbc:postgresql://172.23.25.11:5432/mdm_db
    username: postgres
    password: nhtest
    driver-class-name: org.postgresql.Driver
artha:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    jdbcUrl: jdbc:postgresql://172.23.25.5:5432/artha_db_dev
    username: postgres
    password: nhdev
    driver-class-name: org.postgresql.Driver

application:
  configs:
    indexPageSize: 200
  security:
    authentication:
      db:
        configured: true
      ldap:
        configured: false
        domain: springframework.org
        url: ldap://127.0.0.1:32389
  staging:
    mcr:
      filelocation: ./../artha/staging/mcr/
    serviceAnalysis:
      filelocation: ./../artha/staging/serviceanalysis/
  athmaBucket:
    helpPath: file:./help/
    template: ./src/test/resources/templates/
    tempExport: ./../athmabucket/tempexport/
